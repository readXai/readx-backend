<?php

require_once __DIR__ . '/vendor/autoload.php';

use App\Services\ArabicSyllableService;

echo "üìö Validation p√©dagogique - Textes scolaires arabes\n\n";

// Initialiser le service
$syllableService = new ArabicSyllableService();

// Textes scolaires authentiques par niveau
$schoolTexts = [
    'CP (6-7 ans)' => [
        'ÿ®ŸéŸäŸíÿ™Ÿå' => 'Maison',
        'ŸÉŸêÿ™Ÿéÿßÿ®Ÿå' => 'Livre', 
        'ŸÇŸéŸÑŸéŸÖŸå' => 'Stylo',
        'ŸàŸéŸÑŸéÿØŸå' => 'Gar√ßon',
        'ÿ®ŸêŸÜŸíÿ™Ÿå' => 'Fille'
    ],
    'CE1 (7-8 ans)' => [
        'ŸÖŸéÿØŸíÿ±Ÿéÿ≥Ÿéÿ©Ÿå' => '√âcole',
        'ŸÖŸèÿπŸéŸÑŸêŸëŸÖŸå' => 'Enseignant',
        'ÿ∑ŸéÿßŸÑŸêÿ®Ÿå' => '√âl√®ve',
        'ÿØŸéÿ±Ÿíÿ≥Ÿå' => 'Le√ßon',
        'ŸÉŸèÿ±ŸéŸëÿßÿ≥Ÿéÿ©Ÿå' => 'Cahier'
    ],
    'CE2 (8-9 ans)' => [
        'ÿßŸÑŸíŸÖŸéŸÉŸíÿ™Ÿéÿ®Ÿéÿ©Ÿè' => 'La biblioth√®que',
        'ÿßŸÑŸíÿ≠ŸéÿØŸêŸäŸÇŸéÿ©Ÿè' => 'Le jardin',
        'ÿßŸÑŸíŸÖŸèÿ≥Ÿíÿ™Ÿéÿ¥ŸíŸÅŸéŸâ' => 'L\'h√¥pital',
        'ÿßŸÑŸíÿ¨ŸéÿßŸÖŸêÿπŸéÿ©Ÿè' => 'L\'universit√©',
        'ÿßŸÑŸíŸÖŸèÿ™Ÿéÿ≠ŸéÿØŸêŸëÿ´Ÿè' => 'L\'orateur'
    ],
    'CM1-CM2 (9-11 ans)' => [
        'ÿßŸÑŸíÿßŸêÿ≥Ÿíÿ™ŸêŸÇŸíŸÑŸéÿßŸÑŸè' => 'L\'ind√©pendance',
        'ÿßŸÑŸíŸÖŸèÿ≥Ÿíÿ™ŸéŸÇŸíÿ®ŸéŸÑŸè' => 'L\'avenir',
        'ÿßŸÑŸíŸÖŸèÿ¥Ÿéÿßÿ±ŸéŸÉŸéÿ©Ÿè' => 'La participation',
        'ÿßŸÑŸíÿßŸêŸÜŸíÿ™ŸêÿµŸéÿßÿ±Ÿè' => 'La victoire',
        'ÿßŸÑŸíŸÖŸèÿ≠ŸéÿßŸÅŸéÿ∏Ÿéÿ©Ÿè' => 'La conservation'
    ]
];

$totalWords = 0;
$totalSyllables = 0;
$complexityStats = [
    'CV' => 0,    // Consonne-Voyelle
    'CVC' => 0,   // Consonne-Voyelle-Consonne
    'CVV' => 0,   // Consonne-Voyelle-Voyelle (longue)
    'CVVC' => 0,  // Consonne-Voyelle-Voyelle-Consonne
    'V' => 0,     // Voyelle seule
    'VC' => 0     // Voyelle-Consonne
];

foreach ($schoolTexts as $level => $words) {
    echo "üéì Niveau: $level\n";
    echo str_repeat('=', 50) . "\n";
    
    foreach ($words as $word => $meaning) {
        echo "üìù Mot: $word ($meaning)\n";
        
        try {
            $result = $syllableService->generateSyllables($word);
            $totalWords++;
            $totalSyllables += count($result);
            
            echo "   Syllabes: [";
            foreach ($result as $i => $syllable) {
                echo $syllable['syllable_text'];
                if ($i < count($result) - 1) echo ', ';
                
                // Compter les types de syllabes
                $type = $syllable['syllable_type'];
                if (isset($complexityStats[$type])) {
                    $complexityStats[$type]++;
                } else {
                    $complexityStats['CV']++; // Par d√©faut
                }
            }
            echo "]\n";
            
            echo "   Types: [";
            foreach ($result as $i => $syllable) {
                echo $syllable['syllable_type'];
                if ($i < count($result) - 1) echo ', ';
            }
            echo "]\n";
            
            echo "   Nombre de syllabes: " . count($result) . "\n";
            
        } catch (Exception $e) {
            echo "   ‚ùå ERREUR: " . $e->getMessage() . "\n";
        }
        
        echo "\n";
    }
    
    echo "\n";
}

// Statistiques globales
echo "üìä STATISTIQUES P√âDAGOGIQUES\n";
echo str_repeat('=', 50) . "\n";
echo "Total des mots analys√©s: $totalWords\n";
echo "Total des syllabes g√©n√©r√©es: $totalSyllables\n";
echo "Moyenne syllabes/mot: " . round($totalSyllables / $totalWords, 2) . "\n\n";

echo "üîç R√âPARTITION DES TYPES DE SYLLABES:\n";
foreach ($complexityStats as $type => $count) {
    $percentage = round(($count / $totalSyllables) * 100, 1);
    echo "   $type: $count syllabes ($percentage%)\n";
}

echo "\nüìà ANALYSE P√âDAGOGIQUE:\n";
echo "   ‚Ä¢ CV (simple): " . $complexityStats['CV'] . " - Id√©al pour d√©butants\n";
echo "   ‚Ä¢ CVC (ferm√©e): " . $complexityStats['CVC'] . " - Niveau interm√©diaire\n";
echo "   ‚Ä¢ CVV (longue): " . $complexityStats['CVV'] . " - Apprentissage des voyelles longues\n";
echo "   ‚Ä¢ Complexes: " . ($complexityStats['CVVC'] + $complexityStats['V'] + $complexityStats['VC']) . " - Niveau avanc√©\n";

// Test de cas sp√©ciaux p√©dagogiques
echo "\nüéØ CAS SP√âCIAUX P√âDAGOGIQUES:\n";
echo str_repeat('=', 50) . "\n";

$specialCases = [
    'Lam solaire' => [
        'ÿßŸÑÿ¥ŸéŸëŸÖŸíÿ≥Ÿè' => 'Le soleil',
        'ÿßŸÑÿ∑ŸéŸëÿßŸÑŸêÿ®Ÿè' => 'L\'√©l√®ve',
        'ÿßŸÑÿ±ŸéŸëÿ¨ŸèŸÑŸè' => 'L\'homme'
    ],
    'Lam lunaire' => [
        'ÿßŸÑŸíŸÇŸéŸÖŸéÿ±Ÿè' => 'La lune',
        'ÿßŸÑŸíŸÉŸêÿ™Ÿéÿßÿ®Ÿè' => 'Le livre',
        'ÿßŸÑŸíÿ®ŸéŸäŸíÿ™Ÿè' => 'La maison'
    ],
    'Chadda complexe' => [
        'ŸÖŸèÿØŸéÿ±ŸêŸëÿ≥Ÿéÿ©Ÿå' => 'Enseignante',
        'ŸÖŸèŸáŸéŸÜŸêŸëÿØŸå' => 'Ing√©nieur',
        'ŸÖŸèÿ™Ÿéÿ±Ÿéÿ¨ŸêŸëŸÖŸå' => 'Traducteur'
    ]
];

foreach ($specialCases as $category => $words) {
    echo "üìö $category:\n";
    
    foreach ($words as $word => $meaning) {
        echo "   $word ($meaning): ";
        
        try {
            $result = $syllableService->generateSyllables($word);
            echo "[";
            foreach ($result as $i => $syllable) {
                echo $syllable['syllable_text'];
                if ($i < count($result) - 1) echo ', ';
            }
            echo "]\n";
            
        } catch (Exception $e) {
            echo "ERREUR: " . $e->getMessage() . "\n";
        }
    }
    echo "\n";
}

echo "‚úÖ Validation p√©dagogique termin√©e!\n";
